name: Sign & Test STKeytab
on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Public/**'
      - 'Private/**'
      - 'Tests/**'
      - 'STKeytab.psm1'
      - 'STKeytab.psd1'
      - 'docs/**'
      - 'CI/**'
      - '.github/workflows/**'

  pull_request:
    branches: [ main ]
    paths:
      - 'Public/**'
      - 'Private/**'
      - 'Tests/**'
      - 'STKeytab.psm1'
      - 'STKeytab.psd1'
      - 'docs/**'
      - 'CI/**'
      - '.github/workflows/**'

jobs:
  test:
    runs-on: self-hosted
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PowerShell modules
        shell: pwsh
        run: |
          ./CI/Test-Sign.ps1 -Step Setup

      - name: Run Pester tests
        shell: pwsh
        run: |
          ./CI/Test-Sign.ps1 -Step Test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: TestResults.xml

      - name: Run PSScriptAnalyzer
        shell: pwsh
        run: |
          ./CI/Test-Sign.ps1 -Step Analyze

  sign-module:
    name: Sign Module
    runs-on: self-hosted
    timeout-minutes: 20
    needs: test
    if: github.event_name != 'pull_request'
    env:
      SKIP_SIGNING: 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import signing certificate
        shell: pwsh
        env:
          SIGNING_CERTIFICATE: ${{ secrets.SIGNING_CERTIFICATE }}
          SIGNING_CERT_PASSWORD: ${{ secrets.SIGNING_CERT_PASSWORD }}
        run: |
          ./CI/Test-Sign.ps1 -Step ImportCert -CertificateBase64 $env:SIGNING_CERTIFICATE -SigningCertPassword $env:SIGNING_CERT_PASSWORD

      - name: Sign PowerShell files
        shell: pwsh
        if: env.SKIP_SIGNING != 'true'
        run: |
          ./CI/Test-Sign.ps1 -Step Sign

      - name: Create module package
        shell: pwsh
        run: |
          ./CI/Test-Sign.ps1 -Step Package

      - name: Test signed module
        shell: pwsh
        if: env.SKIP_SIGNING != 'true'
        run: |
          ./CI/Test-Sign.ps1 -Step TestSigned

      - name: Upload signed module package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: |
            ${{ env.PACKAGE_PATH }}
            package/
            package-info.json
          retention-days: 90

      - name: Upload signing summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: signing-summary-${{ github.run_number }}
          path: |
            package-info.json
          retention-days: 30
